{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","MAP","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","e","k","which","metaKey","ctrlKey","altKey","isFunctionKey","isVerticalMovement","indexOf","isHorizontalMovement","toSeparator","sep","undefined","angular","element","prototype","querySelectorAll","selector","this","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","removeSelected","resetSearchInput","generateId","appendToBody","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","console","log","append","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","$injector","templateRequest","get","err","$timeout","callback","debounceTime","timeoutPromise","self","args","Array","slice","call","cancel","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","$templateCache","$templateRequest","restrict","require","compile","tElement","tAttrs","asyncPostLink","$select","uisTemplateRequest","templateUrl","then","template","templateElement","configureTemplate","originalContent","postLink","newContents","groupByExp","groups","length","attr","getGroupNgRepeatExpression","choices","parserResult","repeatExpression","rowsInner","contents","clickTarget","document","addEventListener","itemName","parseRepeatAttr","repeat","groupFilterExp","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","position","toLowerCase","$watch","newValue","open","multiple","activate","activeIndex","tagging","isActivated","minimumInputLength","search","refresh","items","$observe","$eval","groupBy","groupFilter","parse","empty","isDefined","controller","$scope","$element","$filter","$$uisDebounce","$parse","_findIndex","collection","predicate","thisArg","findIndex","value","list","Object","i","_resetSearchInput","EMPTY_SEARCH","selected","item","equals","_groupsFilter","groupNames","j","result","name","push","_updateItemDisabled","isDisabled","disabledItemIndex","disabledItems","splice","_isItemDisabled","_initaliseLockedChoices","doInitalise","_updateItemLocked","isLocked","lockedItemIndex","lockedItems","_isItemlocked","itemScope","itemIndex","lockChoiceExpression","_handleDropDownSelection","key","processed","select","close","attachHandlers","searchInput","on","onSearchInputPaste","onSearchInputTagged","onSearchInputKeyDown","preventDefault","stopPropagation","$apply","tagged","taggingTokens","tokens","keyCode","triggerHandler","newItem","trim","fct","_ensureHighlightVisible","data","window","clipboardData","getData","originalEvent","separator","split","oldsearch","forEach","paste","container","highlighted","posY","offsetTop","clientHeight","offsetHeight","isGrouped","focus","disabled","focusser","clickTriggeredSelect","$animate","isEmpty","isUndefined","initSearchValue","avoidReset","$broadcast","taggingLabel","enabled","animateHandler","phase","off","focusSearchInput","findGroupByName","group","repeatAttr","updateGroups","groupFn","groupName","isFunction","groupFilterFn","isArray","concat","setPlainItems","setItemsFn","itemProperty","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","refreshItems","selectedItems","filteredItems","every","selectedItem","calculateDropdownPos","$watchCollection","ngModel","$modelValue","_refreshDelayPromise","refreshAttr","isActive","_isItemSelected","selection","isTag","$event","type","locals","onSelectCallback","$item","$model","modelMapper","$setTouched","setFocus","focusInput","clear","toggle","sizeWatch","updaterScheduled","sizeSearchInput","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","$$postDigest","noop","searchInputWatch","onResize","$on","uisOffset","controllerAs","removeAttr","matchElem","replaceWith","choicesElem","noChoiceElem","ctrls","onDocumentClick","contains","jQuery","target","focusableControls","targetController","tagName","$digest","positionDropdown","offset","style","after","originalWidth","find","resetDropdown","generatedId","baseTitle","title","focusserTitle","focusserId","inputId","id","transclusionScope","$parent","onSelect","onRemoveCallback","onRemove","choiceGrouped","tabindex","copyTabIndex","focusInputWatch","limit","parseInt","taggingEval","autofocus","focusOn","transcluded","isOpen","dropdown","directionUpClassName","setDropdownPosUp","offsetDropdown","addClass","setDropdownPosDown","removeClass","calculateDropdownPosAfterAnimation","body","opacity","opened","needsCalculated","setAllowClear","allow","allowClear","uiLockChoice","parent","multi","$evalAsync","activeMatchIndex","updateModel","$setViewValue","Date","now","refreshComponent","removeChoice","index","removedChoice","getPlaceholder","onKeyDown","_handleMatchSelection","_getCaretPosition","el","isNumber","selectionStart","getNewActiveMatchIndex","$selectMultiple","prev","last","curr","next","caretPosition","first","newIndex","Math","min","max","searchInputKeyUp","tagItems","tagItem","copy","stashArr","hasTag","dupeIndex","some","origItem","match","_findApproxDupe","_findCaseInsensitiveDupe","itemsWithoutTag","unshift","arr","hasDupe","toUpperCase","haystack","needle","tempArr","mockObj","isObject","onSearchInputBlur","$isEmpty","$parsers","resultMultiple","$formatters","inputValue","checkFnMultiple","p","trackByExp","propsItemNameMatches","exec","oldValue","$render","$viewValue","event","doTransclude","getAppendTarget","t","children","checkFnSingle","d","val","uiSelectSort","$ngModel","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","className","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","hasClass","$emit","array","onOpenCloseCallback","uisOpenClose","previousState","expression","filterMatch","grouped","run","put"],"mappings":"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","file":"select.min.js","sourcesContent":["/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.19.2 - 2016-08-12T14:27:09.836Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  removeSelected: true,\n  resetSearchInput: false,\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          console.log(clone);\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}])\n.factory('uisTemplateRequest', ['$injector', function($injector) {\n  var templateRequest;\n  // $templateRequest service is only availiable angular v1.3+\n  templateRequest = (function () {\n    try {\n      return $injector.get('$templateRequest');\n    } catch (err) {\n      // replace with substitute service\n      return {};\n    }\n  })();\n\n  return templateRequest;\n}])\n  // .factory('uisAsyncCompilerFactory',\n  //   ['uisTemplateRequest', '$templateCache', \n  //   function(uisTemplateRequest, $templateCache) {\n      \n  //     return {createFn: asyncCompilationFactory};\n      \n  //     function asyncCompilationFactory(templateUrl, preCompileFn, templateConfigurationFn, postLinkFn) {\n  //       preCompileFn();\n\n  //       if(angular.isDefined($templateCache.get(templateUrl))) {\n  //         // modify template and return normal link function\n  //         var templateElement = angular.element($templateCache.get(templateUrl));\n          \n  //         templateConfigurationFn(templateElement);\n          \n  //         tElement.append(templateElement);\n\n  //         return postLinkFn;\n  //       } else {\n  //         // return link function that requests template and modifies result\n  //         return function asyncPostLink(scope, element, attrs, $select) {\n  //           uisTemplateRequest(templateUrl).then(function(template) {\n  //             var templateElement = angular.element(template);\n\n  //             templateConfigurationFn(templateElement);\n              \n  //             $compile(templateElement)(scope);\n\n  //             element.append(templateElement);\n\n  //             postLink(scope, element, attrs, $select);\n  //           });\n  //         };\n  //       }\n\n\n  //     }\n\n      \n  //   }]\n  // )\n  ;\n\n\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window', '$templateCache', '$templateRequest',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window, $templateCache, $templateRequest) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      var originalContent = angular.element('<div>').append(tElement.contents());\n      // Avoid compiling contents as its actually the ng-repeat content      \n      tElement.empty();\n\n      var templateUrl = tAttrs.theme + '/choices.tpl.html';\n      \n      if(angular.isDefined($templateCache.get(templateUrl))) {\n        // modify template and return normal link function\n        var templateElement = angular.element($templateCache.get(templateUrl));\n        \n        configureTemplate(templateElement, originalContent);\n        \n        tElement.append(templateElement);\n\n        return postLink;\n      } else {\n        // return link function that requests template and modifies result\n        return asyncPostLink;\n      }\n\n      function asyncPostLink(scope, element, attrs, $select) {\n        uisTemplateRequest(templateUrl).then(function(template) {\n          var templateElement = angular.element(template);\n\n          configureTemplate(templateElement, originalContent);\n          \n          $compile(templateElement)(scope);\n\n          element.append(templateElement);\n\n          postLink(scope, element, attrs, $select);\n        });\n      }\n\n      function configureTemplate(element, newContents) {   \n\n        if (groupByExp) {\n          var groups = element.querySelectorAll('.ui-select-choices-group');\n          if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n          groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n        }\n\n        var choices = element.querySelectorAll('.ui-select-choices-row');\n        if (choices.length !== 1) {\n          throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n        }\n\n        choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp));// .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n      \n        var rowsInner = element.querySelectorAll('.ui-select-choices-row-inner');\n        if (rowsInner.length !== 1) {\n          throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n        }\n        rowsInner.append(newContents.contents());\n        //rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n        // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event. \n        var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n        clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n      }\n\n      function postLink(scope, element, attrs, $select) {\n\n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;        \n\n        scope.$watch('$select.search', function(newValue) {\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        });\n        \n        // var transcluded = angular.element('<div>');// $select.transcluded();\n        \n        // var transcludedHeader = transcluded.querySelectorAll('.ui-select-header');\n        // var transcludedFooter = transcluded.querySelectorAll('.ui-select-footer');\n    \n        // if((transcludedHeader && transcludedHeader.length)) {\n        //   transcludedHeader.removeAttr('ng-transclude'); // Content has already been transcluded\n        //   element.prepend(transcludedHeader);\n        // }\n        \n        // if(transcludedFooter && transcludedFooter.length){\n        //   transcludedFooter.removeAttr('ng-transclude');\n        //   element.append(transcludedFooter);\n        // }\n        \n        attrs.$observe('refreshDelay', function() {\n          // $eval() is needed otherwise we get a string instead of a number\n          var refreshDelay = scope.$eval(attrs.refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n      }\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n  ctrl.resetSearchInput = uiSelectConfig.resetSearchInput;\n\n  ctrl.removeSelected = uiSelectConfig.removeSelected; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n  ctrl.$element = $element;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.isEmpty = function() {\n    return angular.isUndefined(ctrl.selected) || ctrl.selected === null || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput) {\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (ctrl.selected && ctrl.items.length && !ctrl.multiple) {\n        ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n          return angular.equals(this, item);\n        }, ctrl.selected);\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n\n      $scope.$broadcast('uis:activate');\n\n      ctrl.open = true;\n\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var container = $element.querySelectorAll('.ui-select-choices-content');\n      var searchInput = $element.querySelectorAll('.ui-select-search');\n      if (ctrl.$animate && ctrl.$animate.on && ctrl.$animate.enabled(container[0])) {\n        var animateHandler = function(elem, phase) {\n          if (phase === 'start' && ctrl.items.length === 0) {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('removeClass', searchInput[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          } else if (phase === 'close') {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('enter', container[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          }\n        };\n\n        if (ctrl.items.length > 0) {\n          ctrl.$animate.on('enter', container[0], animateHandler);\n        } else {\n          ctrl.$animate.on('removeClass', searchInput[0], animateHandler);\n        }\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(initSearchValue);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1) {\n            _ensureHighlightVisible();\n          }\n        });\n      }\n    }\n    else if (ctrl.open && !ctrl.searchEnabled) {\n      // Close the selection if we don't have search enabled, and we click on the select again\n      ctrl.close();\n    }\n  };\n\n  ctrl.focusSearchInput = function (initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items;\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function (data){\n      data = data || ctrl.parserResult.source($scope);\n      var selectedItems = ctrl.selected;\n      //TODO should implement for single mode removeSelected\n      if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.multiple || !ctrl.removeSelected) {\n        ctrl.setItemsFn(data);\n      }else{\n        if ( data !== undefined && data !== null ) {\n          var filteredItems = data.filter(function(i) {\n            return angular.isArray(selectedItems) ? selectedItems.every(function(selectedItem) {\n              return !angular.equals(i, selectedItem);\n            }) : !angular.equals(i, selectedItems);\n          });\n          ctrl.setItemsFn(filteredItems);\n        }\n      }\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n\n      $scope.$broadcast('uis:refresh');\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ctrl.ngModel.$modelValue)) {\n            ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        $scope.$eval(refreshAttr);\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || itemIndex < 0 ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  var _isItemSelected = function (item) {\n    return (ctrl.selected && angular.isArray(ctrl.selected) &&\n        ctrl.selected.filter(function (selection) { return angular.equals(selection, item); }).length > 0);\n  };\n\n  var disabledItems = [];\n\n  function _updateItemDisabled(item, isDisabled) {\n    var disabledItemIndex = disabledItems.indexOf(item);\n    if (isDisabled && disabledItemIndex === -1) {\n      disabledItems.push(item);\n    }\n\n    if (!isDisabled && disabledItemIndex > -1) {\n      disabledItems.splice(disabledItemIndex, 1);\n    }\n  }\n\n  function _isItemDisabled(item) {\n    return disabledItems.indexOf(item) > -1;\n  }\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var item = itemScope[ctrl.itemProperty];\n    var itemIndex = ctrl.items.indexOf(item);\n    var isDisabled = false;\n\n    if (itemIndex >= 0 && (angular.isDefined(ctrl.disableChoiceExpression) || ctrl.multiple)) {\n\n      if (item.isTag) return false;\n\n      if (ctrl.multiple) {\n        isDisabled = _isItemSelected(item);\n      }\n\n      if (!isDisabled && angular.isDefined(ctrl.disableChoiceExpression)) {\n        isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression));\n      }\n\n      _updateItemDisabled(item, isDisabled);\n    }\n\n    return isDisabled;\n  };\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (item === undefined || !_isItemDisabled(item)) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !_isItemDisabled(item)) {\n        // if click is made on existing item, prevent from tagging, ctrl.search does not matter\n        ctrl.clickTriggeredSelect = false;\n        if($event && $event.type === 'click' && item)\n          ctrl.clickTriggeredSelect = true;\n\n        if(ctrl.tagging.isActivated && ctrl.clickTriggeredSelect === false) {\n          // if taggingLabel is disabled and item is undefined we pull from ctrl.search\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              if (item === undefined) {\n                item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              }\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if (_isItemSelected(item)) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n          _resetSearchInput();\n        }\n\n        $scope.$broadcast('uis:select', item);\n\n        var locals = {};\n        locals[ctrl.parserResult.itemName] = item;\n\n        $timeout(function(){\n          ctrl.onSelectCallback($scope, {\n            $item: item,\n            $model: ctrl.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    ctrl.open = false;\n\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(undefined);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      ctrl.activate();\n    }\n  };\n\n  // Set default function for locked choices - avoids unnecessary\n  // logic if functionality is not being used\n  ctrl.isLocked = function () {\n    return false;\n  };\n\n  $scope.$watch(function () {\n    return angular.isDefined(ctrl.lockChoiceExpression) && ctrl.lockChoiceExpression !== \"\";\n  }, _initaliseLockedChoices);\n\n  function _initaliseLockedChoices(doInitalise) {\n    if(!doInitalise) return;\n\n    var lockedItems = [];\n\n    function _updateItemLocked(item, isLocked) {\n      var lockedItemIndex = lockedItems.indexOf(item);\n      if (isLocked && lockedItemIndex === -1) {\n        lockedItems.push(item);\n        }\n\n      if (!isLocked && lockedItemIndex > -1) {\n        lockedItems.splice(lockedItemIndex, 0);\n      }\n    }\n\n    function _isItemlocked(item) {\n      return lockedItems.indexOf(item) > -1;\n    }\n\n    ctrl.isLocked = function (itemScope, itemIndex) {\n      var isLocked = false,\n          item = ctrl.selected[itemIndex];\n\n      if(item) {\n        if (itemScope) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression));\n          _updateItemLocked(item, isLocked);\n        } else {\n          isLocked = _isItemlocked(item);\n        }\n      }\n\n      return isLocked;\n    };\n  }\n\n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.container[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft - 11;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth + 'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        }, angular.noop);\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) { ctrl.activeIndex++; }\n        break;\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex > 0 || (ctrl.search.length === 0 && ctrl.tagging.isActivated && ctrl.activeIndex > -1)) { ctrl.activeIndex--; }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) ctrl.select(ctrl.items[ctrl.activeIndex], true);\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  var searchInputWatch = $scope.$watch(function() { return ctrl.searchInput; }, function(searchInput) {\n    if(searchInput) {\n      attachHandlers();\n      searchInputWatch();\n      ctrl.sizeSearchInput();\n    }\n  });\n\n  function attachHandlers() {\n    // Bind to keyboard shortcuts\n    ctrl.searchInput.on('paste', onSearchInputPaste);\n    ctrl.searchInput.on('tagged', onSearchInputTagged);\n    ctrl.searchInput.on('keydown', onSearchInputKeyDown);\n  }\n  \n  function onSearchInputKeyDown(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    // if(~[KEY.ESC,KEY.TAB].indexOf(key)){\n    //   //TODO: SEGURO?\n    //   ctrl.close();\n    // }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        if(!_handleDropDownSelection(key) && !ctrl.searchEnabled) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  }\n\n  function onSearchInputPaste(e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n        if (items.length === 0) {\n          items = [data];\n        }\n        var oldsearch = ctrl.search;\n        angular.forEach(items, function (item) {\n          var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n          if (newItem) {\n            ctrl.select(newItem, true);\n          }\n        });\n        ctrl.search = oldsearch || EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  }\n\n  function onSearchInputTagged() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  }\n  \n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    if (ctrl.activeIndex < 0) {\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  var onResize = $$uisDebounce(function() {\n    ctrl.sizeSearchInput();\n  }, 50);\n\n  angular.element($window).bind('resize', onResize);\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout', '$templateCache', 'uisTemplateRequest',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout, $templateCache, uisTemplateRequest) {\n\n  return {\n    restrict: 'EA',\n    replace: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    // Cannot use templateUrl as this existing contents would then be lost \n    // once the template was loaded. Instead manually load the template as \n    // a standard $http (or similar) request.\n    //\n    // When specifying a templateUrl, compilation of nested directives is \n    // performed asynchronously. As we cannot specify the templateUrl the \n    // asynchronous compilation has to be performed manually.\n    //\n    //\n    compile: function(tElement, tAttrs) {\n      \n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      var templateUrl = theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n        \n      // Empty everything and save for use later\n      var originalContent = angular.element('<div>').append(tElement.contents());\n      tElement.empty();\n      \n      if(angular.isDefined($templateCache.get(templateUrl))) {\n        // modify template and return normal link function\n        var templateElement = angular.element($templateCache.get(templateUrl));\n        \n        configureTemplate(templateElement, originalContent);\n        \n        tElement.append(templateElement);\n\n        return postLink;\n      } else {\n        // return link function that requests template and modifies result\n        return asyncPostLink;\n      }\n\n      function configureTemplate(templateElement, newContents) {\n        if (angular.isDefined(tAttrs.multiple)) {\n          templateElement.append('<ui-select-multiple/>').removeAttr('multiple');\n        } else {\n          templateElement.append('<ui-select-single/>');\n        }\n\n        // perform checks for matchElem/choicesElem and data-attrs..\n        var matchElem = newContents.querySelectorAll('ui-select-match');\n        if(matchElem.length !== 1) {\n          throw uiSelectMinErr('uiSelectMatch', \"Expected 1 ui-select-match but got '{0}'.\", matchElem.length);\n        }\n        matchElem.attr('theme', theme);\n        if(angular.isDefined(tAttrs.multiple)) matchElem.attr('multiple', 'true');\n        templateElement.querySelectorAll('.ui-select-match').replaceWith(matchElem);\n\n        var choicesElem = newContents.querySelectorAll('ui-select-choices');\n        if(choicesElem.length !== 1) {\n          throw uiSelectMinErr('uiSelectChoices', \"Expected 1 ui-select-choices but got '{0}'.\", choicesElem.length);\n        }\n        choicesElem.attr('theme', theme);\n        templateElement.querySelectorAll('.ui-select-choices').replaceWith(choicesElem);\n\n        var noChoiceElem = newContents.querySelectorAll('ui-select-no-choice');\n        if(noChoiceElem.length === 1) {\n          templateElement.attr('theme', theme);\n          templateElement.querySelectorAll('.ui-select-no-choice').replaceWith(noChoiceElem);\n        }\n      }\n\n      function asyncPostLink(scope, element, attrs, ctrls) {\n\n        uisTemplateRequest(templateUrl).then(function(template) {\n          \n          var templateElement = angular.element(template);          \n          configureTemplate(templateElement, originalContent);          \n          $compile(templateElement)(scope);\n\n          element.append(templateElement);\n\n          postLink(scope, element, attrs, $select);\n\n        });\n      }\n\n      function postLink(scope, element, attrs, ctrls) {        \n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.searchInput = element.querySelectorAll('input.ui-select-search');\n        $select.container = element.querySelectorAll('.ui-select-container');\n\n        if(tAttrs.inputId) {\n          $select.searchInput[0].id = tAttrs.inputId;\n        }\n\n        $select.transclusionScope = scope.$parent;\n        \n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            if(!$select.focusInput) {\n              var focusInputWatch = scope.$watch(\n                function() { return $select.focusInput; }, \n                function(focusInput) {\n                  if(focusInput) {\n                    copyTabIndex();\n                    focusInputWatch();\n                  }\n              });\n            } else {\n              copyTabIndex();\n            }\n            function copyTabIndex() {\n              $select.focusInput.attr('tabindex', value);\n              element.removeAttr('tabindex');\n            }\n          });\n        }\n\n        scope.$watch(function () { return scope.$eval(attrs.searchEnabled); }, function(newVal) {\n          $select.searchEnabled = newVal !== undefined ? newVal : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('limit', function() {\n          //Limit the number of selections allowed\n          $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n        });\n\n        scope.$watch('removeSelected', function() {\n            var removeSelected = scope.$eval(attrs.removeSelected);\n            $select.removeSelected = removeSelected !== undefined ? removeSelected : uiSelectConfig.removeSelected;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              });\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here event http://stackoverflow.com/questions/12931369\n        $document.on('click', onDocumentClick);\n\n        scope.$on('$destroy', function() {\n          $document.off('click', onDocumentClick);\n        });\n\n        $select.transcluded = function() {return {}; };\n        // Move transcluded elements to their correct position in main template\n\n        // transcludeFn(scope, function(clone) {\n        \n        //   var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n        //   transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n        //   transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n        //   if (transcludedNoChoice.length == 1) {\n        //     element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n        //   }\n        // });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        var calculateDropdownPosAfterAnimation = function() {\n          // Delay positioning the dropdown until all choices have been added so its height is correct.\n          $timeout(function() {\n            if ($select.dropdownPosition === 'up') {\n              //Go UP\n              setDropdownPosUp();\n            } else {\n              //AUTO\n              element.removeClass(directionUpClassName);\n\n              var offset = uisOffset(element);\n              var offsetDropdown = uisOffset(dropdown);\n\n              //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n              var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n              // Determine if the direction of the dropdown needs to be changed.\n              if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                //Go UP\n                setDropdownPosUp(offset, offsetDropdown);\n              }else{\n                //Go DOWN\n                setDropdownPosDown(offset, offsetDropdown);\n              }\n            }\n\n            // Display the dropdown once it has been positioned.\n            dropdown[0].style.opacity = 1;\n          });\n        };\n\n        var opened = false;\n        \n        scope.calculateDropdownPos = function() {\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n\n            if (dropdown.length === 0) {\n              return;\n            }\n\n           // Hide the dropdown so there is no flicker until $timeout is done executing.\n           if ($select.search === '' && !opened) {\n              dropdown[0].style.opacity = 0;\n              opened = true;\n           }\n\n            if (!uisOffset(dropdown).height && $select.$animate && $select.$animate.on && $select.$animate.enabled(dropdown)) {\n              var needsCalculated = true;\n\n              $select.$animate.on('enter', dropdown, function (elem, phase) {\n                if (phase === 'close' && needsCalculated) {\n                  calculateDropdownPosAfterAnimation();\n                  needsCalculated = false;\n                }\n              });\n            } else {\n              calculateDropdownPosAfterAnimation();\n            }\n          } else {\n            if (dropdown === null || dropdown.length === 0) {\n              return;\n            }\n\n            // Reset the position of the dropdown.\n            dropdown[0].style.opacity = 0;\n            dropdown[0].style.position = '';\n            dropdown[0].style.top = '';\n            element.removeClass(directionUpClassName);\n          }\n        };\n      }\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', \n['uiSelectConfig', '$templateCache', 'uisTemplateRequest', \n  function(uiSelectConfig, $templateCache, uisTemplateRequest) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    compile: function(tElement, tAttrs) {\n      \n      // Get theme attribute from parent (ui-select)\n      var parent = tElement.parent().parent();\n      var theme = tAttrs.theme;\n      var multi = angular.isDefined(tAttrs.multiple);\n      \n      // Empty everything and save for use later\n      var originalContent = angular.element('<div>').append(tElement.contents());\n      tElement.empty();\n\n      var templateUrl = theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');\n\n      if(angular.isDefined($templateCache.get(templateUrl))) {\n        // modify template and return normal link function\n        var templateElement = angular.element($templateCache.get(templateUrl));\n        \n        configureTemplate(templateElement, originalContent);\n        \n        tElement.append(templateElement);\n\n        return postLink;\n      } else {\n        // return link function that requests template and modifies result\n        return asyncPostLink;\n      }\n    \n      function configureTemplate(template, contents) {\n        template.querySelectorAll('.ui-select-match-append').append(contents.contents());\n      }\n\n      function asyncPostLink(scope, element, attrs, $select) {\n        uisTemplateRequest(templateUrl).then(function(template) {\n          var templateElement = angular.element(template);\n\n          configureTemplate(templateElement, originalContent);\n          \n          $compile(templateElement)(scope);\n\n          element.append(templateElement);\n\n          postLink(scope, element, attrs, $select);\n        });\n      }\n\n      function postLink(scope, element, attrs, $select) {\n        $select.lockChoiceExpression = attrs.uiLockChoice;\n        attrs.$observe('placeholder', function(placeholder) {\n          $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n        });\n\n        function setAllowClear(allow) {\n          $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n        }\n\n        attrs.$observe('allowClear', setAllowClear);\n        setAllowClear(attrs.allowClear);\n\n        if($select.multiple){\n          $select.sizeSearchInput();\n        }\n      }\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout', function(uiSelectMinErr, $timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        if($select.refreshItems){\n          $select.refreshItems();\n        }\n        if($select.sizeSearchInput){\n          $select.sizeSearchInput();\n        }\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        // if the choice is locked, don't remove it\n        if($select.isLocked(null, index)) return false;\n\n        var removedChoice = $select.selected[index];\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n        return true;\n      };\n\n      ctrl.getPlaceholder = function(){\n        //Refactor single?\n        if($select.selected && $select.selected.length) return;\n        return $select.placeholder;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          resultMultiple.unshift(result);\n        }\n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if(angular.isUndefined(ngModel.$viewValue) || ngModel.$viewValue === null){\n            ngModel.$viewValue = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      function onKeyDown(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      }\n\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                if($selectMultiple.removeChoice(curr)) {\n                  return prev;\n                } else {\n                  return curr;\n                }\n                \n              } else {\n                // If nothing yet selected, select last item\n                return last;  \n              }              \n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      var searchInputWatch = scope.$watch(function() { return $select.searchInput; }, function(searchInput) {\n        if(searchInput) {\n          $select.searchInput.on('blur', onSearchInputBlur);\n          $select.searchInput.on('keyup', searchInputKeyUp);\n          $select.searchInput.on('keydown', onKeyDown);\n          searchInputWatch(); \n          $select.focusInput = $select.searchInput;\n        }\n      });\n      function searchInputKeyUp(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      }\n\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n      \n      function onSearchInputBlur() {\n        $timeout(function() {\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      }\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }, \n            link: function(scope, element, attrs, $select, transclude) {\n                // if(!$select.$parent) {\n                //     var transludeWatch = scope.$watch(function() { return $select.transclusionScope; }, function(trScope) {\n                //         if(trScope) {\n                //             doTransclude();\n                //             transludeWatch();\n                //         }\n                //     });\n                // } else {\n                    doTransclude();\n                //}\n\n                function doTransclude() {\n                    transclude($select.$parent, function(clone) {\n                        getAppendTarget(element).append(clone);\n                    });\n                }\n\n                // Get lowest element\n                function getAppendTarget(t) {\n                    var target = t,\n                        next = target;\n\n                    while( next.length ) {\n                        target = next;\n                        next = next.children();\n                    }\n\n                    return target;\n                }\n            }\n        };\n    }]);\n\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        var locals = {},\n            result;\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      element.parent().append(focusser);\n      focusser.bind(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n\n        if (e.which === KEY.BACKSPACE) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(undefined);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\nuis.directive('uisOpenClose', ['$parse', '$timeout', function ($parse, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      $select.onOpenCloseCallback = $parse(attrs.uisOpenClose);\n\n      scope.$watch('$select.open', function (isOpen, previousState) {\n        if (isOpen !== previousState) {\n          $timeout(function () {\n            $select.onOpenCloseCallback(scope, {\n              isOpen: isOpen\n            });\n          });\n        }\n      });\n    }\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups track by $group.name';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices.tpl.html\",\"<div class=\\\"dropdown\\\" ng-class=\\\"{open: $select.open}\\\"><ul class=\\\"ui-select-choices ui-select-choices-content ui-select-dropdown dropdown-menu\\\" role=\\\"listbox\\\" ng-show=\\\"$select.open && $select.items.length > 0\\\"><li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"><div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div><div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" role=\\\"option\\\"><span class=\\\"ui-select-choices-row-inner\\\"></span></div></li></ul></div>\");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><span ng-repeat=\\\"$item in $select.selected track by $index\\\"><span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span class=\\\"ui-select-match-append\\\"></span></span></span></span>\");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"><span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left ui-select-match-append\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty() && ($select.disabled !== true)\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"><i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i></a></span></div>\");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<div class=\\\"dropdown\\\" ng-class=\\\"{open: $select.open && $select.items.length == 0}\\\"><ul class=\\\"ui-select-no-choice dropdown-menu\\\"><li></li></ul></div>\");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap form-control\\\"><div><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" ondrop=\\\"return false;\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"form-control ui-select-search\\\" ng-class=\\\"{ \\'ui-select-search-hidden\\' : !$select.searchEnabled }\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.open\\\"><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"><li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"><div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div><ul role=\\\"listbox\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"><li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $select.isActive(this), \\'select2-disabled\\': $select.isDisabled(this)}\\\"><div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div></li></ul></li></ul>\");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"ui-select-match-append\\\"></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a></li></span>\");\n$templateCache.put(\"select2/match.tpl.html\",\"<a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen ui-select-match-append\\\"></span> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span></a>\");\n$templateCache.put(\"select2/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled}\\\"><ul class=\\\"select2-choices\\\"><span class=\\\"ui-select-match\\\"></span><li class=\\\"select2-search-field\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" ondrop=\\\"return false;\\\"></li></ul><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"><div class=\\\"ui-select-choices\\\"></div></div></div>\");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled, \\'select2-container-active\\': $select.focus, \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"><div class=\\\"ui-select-match\\\"></div><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"search-container\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled, \\'select2-search\\':$select.searchEnabled}\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div></div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div ng-show=\\\"$select.open\\\" class=\\\"ui-select-choices ui-select-dropdown selectize-dropdown single\\\"><div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"><div class=\\\"ui-select-choices-group optgroup\\\" role=\\\"listbox\\\"><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div><div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\"><div class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"></div></div></div></div></div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\"><span ng-show=\\\"!$select.searchEnabled && ($select.isEmpty() || $select.open)\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty() || $select.open\\\" class=\\\"ui-select-match-append\\\"></span></div>\");\n$templateCache.put(\"selectize/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice selectize-dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"selectize-dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.isEmpty() && !$select.open\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");}]);",null,null],"sourceRoot":"/source/"}